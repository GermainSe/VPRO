#!/bin/bash

cd src
list=(
  IDLE NOTHING
  MIPS_DIV MIPS_LOOP MIPS_FIBONACCI MIPS_VARIABLE_VPRO
  DMA_FPGA DMA_FPGA2
  DMA_VU_1DL_1DE DMA_VU_1DL_1DE_size1 DMA_VU_1DL_2DE DMA_2DE_1DL_1DE DMA_2DE_1DL_2DE DMA_1DE_1DL_1DE DMA_1DE_1DL_2DE
  DMA_PADDING_ALL_1 DMA_PADDING_ALL_2 DMA_PADDING_L DMA_PADDING_R DMA_PADDING_T DMA_PADDING_B DMA_PADDING_L_STRIDE DMA_PADDING_R_STRIDE DMA_PADDING_T_STRIDE DMA_PADDING_B_STRIDE DMA_PADDING_STRIDE DMA_BROADCAST_LOAD_1D DMA_BROADCAST_LOAD_2D DMA_DCACHE_SHORT_2D
  LOADB LOADBS LOADS LOAD LOADS_Shift_R LOADS_Shift_L
  STOREA STOREB
  BIT_REVERSAL
  MIN_VECTOR_VAL MAX_VECTOR_VAL MIN_VECTOR_INDEX MAX_VECTOR_INDEX
  ADD ADDI SUB SUBI
  MULH_NEG MULH_POS MULL_NEG MULL_POS MULH MULHI MULLI MULL MACH MACH_PRE MACL MACL_PRE MULH_SHIFT MACH_SHIFT
  ABS MAX MIN
  MV_MI MV_NZ MV_PL MV_ZE
  SHIFT_AR SHIFT_AR_NEG SHIFT_AR_POS SHIFT_LR
  AND ANDN NAND NOR OR ORN XNOR XOR
  VPRO_COMPLEX_ADRS_EXT VPRO_COMPLEX_ADRS_EXT2 SHORT_VECTOR BLOCKING_SIMPLE CHAINING_FLAGS CMD_BROADCAST_UNITS CMD_BROADCAST_LANES CMD_FIFO
  LOOP_SINGLE LOOP_CASCADE LOOP_MIX
  LS_LANE0 LS_LANE1 LS_LANE2 LS_LANE3 LS_LANE4
  CNN_28_K3 CNN_7_K3 CNN_28_K1 CNN_7_K1
)

for i in "${list[@]}"
do
  if test -f $i.cpp; then
	echo "$i.cpp already exists!"
  else
	cp ADD.cpp $i.cpp
  fi
done

